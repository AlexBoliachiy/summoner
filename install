#!/bin/bash

set -eu

LOCAL_BIN=~/.local/bin

DEFAULT_OWNER=
DEFAULT_NAME=
DEFAULT_EMAIL=

# Replace "template" strings (e.g. `{{DEFAULT_OWNER}}`) in
# `hs-init.hs` with user-provided values.
set_default() {
  local setting="$1"
  local value="$2"

  local sed_cmd="s/^\($setting\) = \"\(.*\)\"$/\1 = \"$value\"/"

  # Need the extension here because GNU and BSD sed act differently
  # for in-place replacements (of course).
  sed -i.orig "$sed_cmd" hs-init.hs
}

set_defaults() {
  [ -n "$DEFAULT_OWNER" ] && set_default defaultOwner "$DEFAULT_OWNER"
  [ -n "$DEFAULT_NAME" ] && set_default defaultName "$DEFAULT_NAME"
  [ -n "$DEFAULT_EMAIL" ] && set_default defaultEmail "$DEFAULT_EMAIL"

  rm -f hs-init.hs.orig
}

# Cut down a bit on the noise of handling user input in a pipe.
read_default() {
  local prompt="$1"
  local dest="$2"

  IFS= read -r -p "$prompt" "$dest" <&2
}

# Prompt for and set default settings values in `hs-init.hs`. Any
# values not provided are simply left as their template strings.
populate_defaults() {
  read_default 'Default GitHub username: ' DEFAULT_OWNER
  read_default 'Default name: ' DEFAULT_NAME
  read_default 'Default email address: ' DEFAULT_EMAIL

  set_defaults
}

wget https://raw.githubusercontent.com/kowainik/hs-init/master/hs-init.hs

populate_defaults

chmod +x hs-init.hs

[ -d "$LOCAL_BIN" ] || mkdir -p "$LOCAL_BIN"

mv hs-init.hs $LOCAL_BIN/hs-init
